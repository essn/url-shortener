== README

Simple Rails app to practice AJAX and keep my chops up.

Features:

* O and 0 are treated identically for ease of use
* URLs will be regenerated if they differ by one character
* URLs will not contain a list of inappropriate words
* White spaces are trimmed to ensure the URL is found correctly
* Errors for blank or invalid URLs
* Growlyflash used for errors
* AJAX used to make single page app that does not require reloading
* JSON API added just in case...you never know

== Requirements

Create a Rails web service that has the following behaviors:

* Given a long URL, it will provide a short URL

* Given a short URL that it generated, it will provide the corresponding long URL

A URL shortener by itself is simply an apprentice project. Let's make it somewhat more

interesting by adding some requirements:

* Short URLs are likely to be transcribed by hand, so they should accommodate

common transcription ambiguities. O and 0 should be treated identically, for

example.

* On the other hand, transcription errors should ideally not result in false results.

The short URLspace should be sparse, specifically having the property that no

two short URLs should differ by only one character.

== Bonus Round

The hallmark of a good design is how well it adapts to changing requirements. If you

have the time and inclination, you might expand on the requirements with other sensible

ideas, e.g.:

* Short URLs must not contain any string in a list of inappropriate words. The list

should be stubbed as "foo" and "bar" while legal trawls 4chan and compiles a

master list of terms calculated to give offense.
